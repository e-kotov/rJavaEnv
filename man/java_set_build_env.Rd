% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/java_env.R
\name{java_set_build_env}
\alias{java_set_build_env}
\title{Set the full environment for building rJava from source}
\usage{
java_set_build_env(
  where = c("session", "both", "project"),
  java_home,
  project_path = NULL,
  quiet = FALSE
)
}
\arguments{
\item{where}{Where to set the \code{JAVA_HOME}: "session", "project", or "both". Defaults to "session" and only updates the paths in the current R session. When "both" or "project" is selected, the function updates the .Rprofile file in the project directory to set the JAVA_HOME and PATH environment variables at the start of the R session.}

\item{java_home}{The path to the desired \code{JAVA_HOME}.}

\item{project_path}{A \code{character} vector of length 1 containing the project directory where Java should be installed. If not specified or \code{NULL}, defaults to the current working directory.}

\item{quiet}{A \code{logical} value indicating whether to suppress messages. Can be \code{TRUE} or \code{FALSE}.}
}
\value{
Nothing. Sets environment variables and prints an instructional message.
}
\description{
Configures the current R session and/or project \code{.Rprofile} with all the necessary environment variables (\code{LDFLAGS}, \code{LIBS}, \code{JAVA_CPPFLAGS}, etc.) required to successfully compile \code{rJava} from source using \code{install.packages("rJava", type = "source")}.

\strong{Warning}: Setting this environment in your \code{.Rprofile} is powerful but can potentially interfere with the installation of other source packages. It is generally safer to set this for the \code{"session"} only.
}
\examples{
\dontrun{
# Set the current session to prepare for building rJava from source
java_set_build_env(where = "session", java_home = "/path/to/java/home")
# Now you can run: install.packages("rJava", type = "source")
}
}
\seealso{
\code{\link[=java_env_set]{java_env_set()}}
}
